{-# LANGUAGE QuasiQuotes, FlexibleContexts #-}

module Parse (
	BMP(..),
	parseBMP,
	testBMP
) where

import Here
import Text.Peggy

data BMP = BMP {
	colorDic :: [(Char, (Int, Int, Int))],
	bmpBody :: [String]
 } deriving Show

parseBMP :: String -> BMP
parseBMP src = case parseString top "<code>" src of
	Right bs -> bs
	Left ps -> error $ show ps

[peggy|

top :: BMP
	= empty_line* colorD empty_line bmpB	{ BMP $2 $4 }

colorD :: [(Char, (Int, Int, Int))]
	= colorOne+

colorOne :: (Char, (Int, Int, Int))
	= [!-~] ': ' rgb [\n]		{ ($1, $2) }

rgb :: (Int, Int, Int)
	= num ' ' num ' ' num		{ ($1, $2, $3) }

num :: Int
	= [0-9]+			{ read $1 }

empty_line :: ()
	= [\n]				{ () }

bmpB :: [String]
	= line+				{ $1 }

line :: String
	= [!-~]+ [\n]			{ $1 }

|]

main = do
	print testBMP

testBMP = parseBMP [here|

*: 0 0 0
.: 255 255 255

........................................*.......................
..........................................*.....................
...................**********...............*...................
.................**************.............*...................
...............*****************............*...................
..............*******************...........*...................
.............*********************..........*...................
............***********************.........*...................
...........*************************........*...................
..........***************************.......*...................
..........***************************.......*...................
..........***************************.......*...................
..........***************************.......*...................
..........***************************.......*...................
..........***************************.......*...................
..........***************************.......*...................
..........***************************.......*...................
...........*************************........*...................
...........*************************........*...................
............***********************.........*...................
.............*********************..........*...................
..............*******************...........*...................
.................**************.......*******...................
...................**********.........*******...................
......................................*******...................
................................................................

	 |]
