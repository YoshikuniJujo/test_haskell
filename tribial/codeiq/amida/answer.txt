※これは解答用サンプルファイルです。

■標準出力の結果２行を書いてください
記入例）
1,3,2,4
5,7,4,3,1,2,6,8

あなたの解答)
3,1,2,4
27,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,30,29

■あなたが書いた開発言語とそのバージョンを教えてください。未記入の場合、減点となります。

Haskell

The Glorious Glasgow Haskell Compilation System, version 7.6.3

■あなたが書いたコードの内容や工夫した点をわかりやすく説明してください。未記入の場合、減点となります。



■もし企業からのスカウトメールがきたらどのくらい積極的にアクションすると思いますか？下記の3つから選んでお答えください。（任意）
 A.積極的に会ってみたいと思う
 B.社名や条件次第では会ってみたいと思う
 C.よほどのことがない限り返信しない

(B)

■あなたが書いたコードを貼り付けてください。未記入の場合、減点となります。



import Control.Applicative
import Data.List
import System.Environment

amida1 :: [Int] -> [Int] -> [Int]
amida1 [] [x] = [x]
amida1 [1] [x, y] = [y, x]
amida1 (0 : bs) (x : xs) = x : amida1 bs xs
amida1 (1 : 0 : bs) (x : y : xs) = y : x : amida1 bs xs
amida1 xs bs = error $ "bad amida: " ++ show xs ++ " " ++ show bs

amida :: [[Int]] -> [Int]
amida bs = foldr amida1 [1 .. length (head bs) + 1] bs

readCsv :: String -> [[Int]]
readCsv = map (map read . comma) . lines

comma :: String -> [String]
comma cs = case span (/= ',') cs of
	(w, ',' : r) -> w : comma r
	(w, _) -> [w]

main :: IO ()
main = do
	bss <- readCsv <$> (readFile . head =<< getArgs)
	putStrLn . intercalate "," . map show $ amida bss
