※これは解答用テキストファイルです。


答え：313


■プログラムを使用した場合は、使用言語・動作環境について
言語の種類を記入してください。未記入の場合、減点となります。

Haskell

■プログラムを使用した場合は、ideone(http://ideone.com/)にて実行したかを記入してください。未記入の場合、減点となります。

していない。

■プログラムを使用した場合は、あなたが書いたコードを貼り付けてください。未記入の場合、減点となります。

import Data.List

mul, add :: Int -> Int -> Int
m `mul` n = (m * n) `mod` 1000
m `add` n = (m + n) `mod` 1000

facts :: [Int]
facts = map (foldl1' mul . enumFromTo 1) [1 ..]

-- 15以上の値の階乗を素因数分解すると必ず3つ以上の2と3つ以上の5が出てくる。
-- つまり、15以上の値の階乗は1000を法として0と合同である。
-- よって14の階乗までの和を求めれば良い。

main :: IO ()
main = print . foldl1' add $ take 14 facts
