IO monadの話のなかで、do記法に触れる必要があるな。
そしたら例題->演習といった感じか。

遅延IOの話はiterateeを紹介するときでいいだろう。

第1回 ミニマルな本質
第2回 特徴
第3回 最小限の意味論と構文糖
第4回 リスト
第5回 再帰関数
第6回 IOモナド
第7回 型クラス (newtypeの話題もここに入れよう)
第8回 モジュールシステム
第9回 落ち穂拾い
第10回 ghcの使いかた (runghc, ghciやその他のオプションについて)
---
第11回 ドキュメンテーション(haddock)
第12回 ランダム
第13回 テスト(型によるチェック、展開による証明、doctest, quickcheck, hunit)
第14回 モナド
第15回 いろいろなモナド
(ここまで作った、以下予定)
第16回 型族
第17回 monad transfer library
第18回 GADTs
第19回 プロファイリング
第20回 正格評価(foldl'あたりから入ると良さそうだ)
第21回 パターンマッチと正格性(遅延パターン、bang pattern等)
第22回 array, bytestring
第23回 Map (Hashにもちょっと触れる)
第24回 zipper
第25回 例外処理
第26回 ffi
第27回 unbox型
第28回 cabalの使いかた(テストの自動化も含めて)
---
第29回 functor, applicative, monad
第30回 free monad
第31回 operational monad
第32回 並行実行
第33回 forall(ランクN多相)
第34回 ST monad
第35回 ref, mvar, chan, tvar
第36回 stm
第37回 正格評価、非正格評価、グラフ簡約
第38回 正規形、頭部正規形、弱頭部正規形
第39回 deepseq
第40回 並列実行
第41回 template haskell
第42回 QuasiQuotes
第43回 parser (papillon の紹介)
第44回 unsafePerformIO, unsafeInterleaveIO
第45回 遅延IOとiteratee
第46回 可変長引数 (Text.Printf等)
第47回 継続モナド
第48回 Arrow
第49回 Foldable
第50回 Traversable
第51回 Sequence (finger tree, queue)
---
第52回 モナド内包表記 monad comprehension
第53回 LANGUAGEプラグマ
第54回 その他のプラグマ
	(OPTIONS_GHC, WARNING, DEPRECATED, INLINE, RULES,
		SPECIALIZE, UNPACK, SOURCE)
	-> 場合によってはいくつかに分けよう

どこかで queue にも触れたいな
finger tree面白いな

Preludeについても触れておく必要があるな
あとは let ... in ..., where ...,
newtype もどこかで触れなければならないな。
Int と Integer について、も。
field label についても、か。
pattern guardはHaskell 2010に入ってるので初級編で触れておこうかな。
view patternもついでに
ffiも2010に入ってるな。
-- や {- ... -}コメントについて。
.lhs についてはどうしようかな。
落ち穂拾いのところで簡単に触れておこう。
型注釈についても触れとこう。
それとas patternもだな。
irrefutable patternも。

bang patternについてはどこか別の場所で触れる必要がある。

正格評価についてもどこかで触れる必要があるな。
それとunbox型も、かな。

ST monad や stm についても触れたい。
ST monad について触れるなら forall についても触れる必要があるだろう。
stm について触れる際に ref, mvar, chan, tvar あたりにも触れることにする。

profiling の話もいれる必要があるな。

第7回のキューの例をよりスムーズにするために、
第6回のIOのところでIOに関する再帰的プロセスと反復的プロセスについて
例を挙げておく必要があるだろう。

並列実行について触れるかどうか。
並行実行については触れておきたいな。<- stmより前がいいだろう。
例外処理も必要だな。

zipperについてどこかで触れたいな。
Foldableについても触れたいな。
Traversableについても触れる必要があるかも。
haddockにも触れる必要があるな。

RULESも面白い機能ではある。
INLINEについても見ておく必要がある。

ViewPatternsは効率に関する問題がある気がする。
初級編からは消そうかな。

またOverloadedStringsは「いけてる」気がする。
これもどこかで触れたいな。

GeneralizedNewtypeDerivingも「いけてる」気がする。

ScopedTypeVariablesも「いけてる」と思う。

どこかに時間の扱いも入れときたいな。

どこかでMonadPlusについても触れたいな。

型クラスにおける関数のデフォルト定義について触れているか確かめること。

以下の型レベルの機能については理解したうえで入れるかどうか検討すること
	DataKinds, TypeOperators, ScopedTypeVariables, ConstraintKinds

どこかで「代数的データ型(algebraic data type)」という用語の説明が必要だ。

kindについてもどこかで触れたい。
GADTsあたりで触れられるだろうか。
