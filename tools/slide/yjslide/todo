* 第6回でIOに関する再帰的プロセスと反復的プロセスについて触れる
* 第7回の型クラスのところでNumクラスについて触れよう
* 落ち穂拾いのなかで触れるもの
	- let ... in ...
	- where
	- do内での let
	- do内でのパターンマッチ
	- let, where内でのパターンマッチ
	- トップでのパターンマッチ
	- field label
	- pattern guard (Haskell 2010に入った)
	- view pattern (Haskell 2010には入っていない)
	- --と{- ... -}、コメントについて
	- .lhs 文芸的プログラミングについて
	- as pattern
* pipe の代わりに >=> を使ってもいいかも
* ghcの使いかた
	- -iオプションは説明する必要がある
	- .cファイルや.oファイルも与えられる
	- -Oについて説明する必要がある
* どこかでgetArgsの使いかたを説明する必要があるな

* 第11回はきちんとした英語で書き直そう

* 第23回
	- 前半はもっと簡単な感じにしよう
		いろいろな例外処理のしかたを紹介する
	- 後半でcatchをより深く見ていく
		ここで自作の例外型の定義等を行う
	- throw, throwIO
	- handle
	- cathes
	- try
	- bracket, finally, onException, bracketOnError
	- evaluate
	- assert
* 第24回
	- IOError == IOExceptionについて
	- ioError
	- catchJust, handleJust
	- tryJust

* 並行プログラミングのあたりで
	- throwTo
	- mask
