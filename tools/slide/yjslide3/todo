「第1回 関数」のところに
	fun 0 = ...
の形の説明を追加する必要があるかもしれない。
そうすると[関数名] [仮引数1] [仮引数2] ...ではなく、
[関数名] [パターン1] [パターン2] ...のようにする必要がある。

しかし、パターンマッチはタプルの説明をした後のほうがわかりやすい気もする。
リストの前にタプルとカリー化について説明し、そのときにパターンマッチについて
説明するのが良いのかもしれない。

* 講義のはじめに以下を開くようにうながすようにする
	- 編集用のコマンドプロンプト
	- ghci用のコマンドプロンプト

(* はやめにパターンマッチにおける'@'の意味を導入しておきたい)
* if then elseについてどこかで触れておく必要がある
* div, modについても触れておく必要がある
* (!!)も早めに触れておくべきかもしれない

* 例題や演習のなかでIntを使っているところをIntegerを使うように直すべきかもしれない
* lecture 10でmapをmyMap等にするべきかもしれない

* let ... in ... の形も早い段階で導入しておく必要がある

* リストの内包表現をどこかで導入すること
* (!!)についても説明する

* aiNをもうすこし分割できないか考えること!
	- できなければ説明をもっとわかりやすくすること

* それぞれの講義日の終わりに自習課題を出すことにする
	- 自習課題の作成が必要
	- とくに1日目の分については、できれば3月中に作りたい
	- 4月のトライアルにまにあわせたいということ

* git bashを使うようにスライドや資料を変更する
* ディレクトリ等を最初から用意しているバージョンに変更する
* ディレクトリは以下のような場所になる
	cd lecture/studentPC/lectures/lecture18/
